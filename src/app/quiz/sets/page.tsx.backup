'use client'

import { useState } from 'react'
import Link from 'next/link'
import { useRouter } from 'next/navigation'

export default function QuestionSetsPage() {
  const router = useRouter()
  const [selectedSet, setSelectedSet] = useState<string>('')
  const [questionCount, setQuestionCount] = useState(25)
  const [shuffle, setShuffle] = useState(true)
  const [shuffleAnswers, setShuffleAnswers] = useState(true)

  const questionSets = [
    { id: '1', label: 'Questions 1-100', file: '1' },
    { id: '2', label: 'Questions 100-200', file: '2' },
    { id: '3', label: 'Questions 200-300', file: '3' },
    { id: '4', label: 'Questions 300-400', file: '4' },
    { id: '5', label: 'Questions 400-500', file: '5' },
    { id: '6', label: 'Questions 500-600', file: '6' },
    { id: '7', label: 'Questions 600-700', file: '7' },
    { id: '8', label: 'Questions 700-800', file: '8' },
    { id: '9', label: 'Questions 800-900', file: '9' },
    { id: 'random', label: 'Random Mix', file: '' }
  ]

  const handleStartQuiz = () => {
    if (!selectedSet) {
      alert('Please select a question set')
      return
    }

    const params = new URLSearchParams()
    params.set('count', questionCount.toString())
    params.set('shuffle', shuffle.toString())
    params.set('shuffleAnswers', shuffleAnswers.toString())
    
    if (selectedSet !== 'random') {
      params.set('file', selectedSet)
    }

    router.push(`/quiz/start?${params.toString()}`)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-950 to-slate-900">
      <div className="container mx-auto px-4 py-8">
        <Link 
          href="/quiz" 
          className="inline-flex items-center text-blue-400 hover:text-blue-300 mb-6 transition-colors"
        >
          <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
          </svg>
          Back to Quiz Options
        </Link>

        <div className="max-w-4xl mx-auto">
          <div className="bg-slate-800/50 backdrop-blur-sm rounded-xl p-8 shadow-2xl border border-slate-700">
            <h1 className="text-3xl font-bold text-white mb-2">Practice Question Sets</h1>
            <p className="text-gray-400 mb-8">Choose a specific set of questions to practice</p>

            <div className="space-y-6">
              {/* Question Set Selection */}
              <div>
                <label className="block text-sm font-medium text-gray-300 mb-3">
                  Select Question Set
                </label>
                <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                  {questionSets.map((set) => (
                    <button
                      key={set.id}
                      onClick={() => setSelectedSet(set.file || set.id)}
                      className={`p-3 rounded-lg border transition-all ${
                        (selectedSet === set.file || selectedSet === set.id)
                          ? 'bg-blue-600 border-blue-500 text-white'
                          : 'bg-slate-700/50 border-slate-600 text-gray-300 hover:bg-slate-700 hover:border-slate-500'
                      }`}
                    >
                      {set.label}
                    </button>
                  ))}
                </div>
              </div>

              {/* Question Count */}
              <div>
                <label className="block text-sm font-medium text-gray-300 mb-3">
                  Number of Questions
                </label>
                <div className="flex items-center space-x-4">
                  <input
                    type="range"
                    min="10"
                    max="100"
                    step="5"
                    value={questionCount}
                    onChange={(e) => setQuestionCount(parseInt(e.target.value))}
                    className="flex-1"
                  />
                  <span className="text-white font-semibold bg-slate-700 px-3 py-1 rounded">
                    {questionCount}
                  </span>
                </div>
              </div>

              {/* Options */}
              <div className="space-y-3">
                <label className="flex items-center space-x-3 cursor-pointer">
                  <input
                    type="checkbox"
                    checked={shuffle}
                    onChange={(e) => setShuffle(e.target.checked)}
                    className="w-5 h-5 rounded border-gray-600 text-blue-600 focus:ring-blue-500 focus:ring-offset-0 bg-slate-700"
                  />
                  <span className="text-gray-300">Shuffle Questions</span>
                </label>
                
                <label className="flex items-center space-x-3 cursor-pointer">
                  <input
                    type="checkbox"
                    checked={shuffleAnswers}
                    onChange={(e) => setShuffleAnswers(e.target.checked)}
                    className="w-5 h-5 rounded border-gray-600 text-blue-600 focus:ring-blue-500 focus:ring-offset-0 bg-slate-700"
                  />
                  <span className="text-gray-300">Shuffle Answer Options</span>
                </label>
              </div>

              {/* Start Button */}
              <div className="pt-4">
                <button
                  onClick={handleStartQuiz}
                  disabled={!selectedSet}
                  className={`w-full py-3 px-6 rounded-lg font-semibold transition-all ${
                    selectedSet
                      ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:from-blue-700 hover:to-purple-700 shadow-lg'
                      : 'bg-slate-700 text-gray-500 cursor-not-allowed'
                  }`}
                >
                  Start Practice Quiz
                </button>
              </div>
            </div>

            {/* Info Box */}
            {selectedSet && selectedSet !== 'random' && (
              <div className="mt-6 p-4 bg-blue-900/30 rounded-lg border border-blue-700/50">
                <div className="flex items-start space-x-2">
                  <svg className="w-5 h-5 text-blue-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                    <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
                  </svg>
                  <div className="text-sm text-gray-300">
                    <p className="font-semibold text-blue-300 mb-1">Selected: Questions {selectedSet === '1' ? '1-100' : `${(parseInt(selectedSet) - 1) * 100}-${parseInt(selectedSet) * 100}`}</p>
                    <p>You'll be practicing with {questionCount} questions from this set.</p>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}
